[{"/Users/gimdohyeon/FirstReact/movie_app/src/index.js":"1","/Users/gimdohyeon/FirstReact/movie_app/src/App.js":"2","/Users/gimdohyeon/FirstReact/movie_app/src/components/globalStyles.js":"3","/Users/gimdohyeon/FirstReact/movie_app/src/components/header.js":"4","/Users/gimdohyeon/FirstReact/movie_app/src/pages/main.js":"5","/Users/gimdohyeon/FirstReact/movie_app/src/constants/constants.js":"6","/Users/gimdohyeon/FirstReact/movie_app/src/components/movieListItem.js":"7","/Users/gimdohyeon/FirstReact/movie_app/src/components/loader.js":"8","/Users/gimdohyeon/FirstReact/movie_app/src/components/instance.js":"9","/Users/gimdohyeon/FirstReact/movie_app/src/genres/genres.js":"10","/Users/gimdohyeon/FirstReact/movie_app/src/year/year.js":"11","/Users/gimdohyeon/FirstReact/movie_app/src/movieDetail/movieDetail.js":"12","/Users/gimdohyeon/FirstReact/movie_app/src/movieDetail/bgImage.js":"13"},{"size":271,"mtime":1620044187737,"results":"14","hashOfConfig":"15"},{"size":717,"mtime":1622464097115,"results":"16","hashOfConfig":"15"},{"size":2627,"mtime":1620647923820,"results":"17","hashOfConfig":"15"},{"size":3691,"mtime":1621855991794,"results":"18","hashOfConfig":"15"},{"size":5167,"mtime":1621855154612,"results":"19","hashOfConfig":"15"},{"size":197,"mtime":1620651067102,"results":"20","hashOfConfig":"15"},{"size":2116,"mtime":1621858217635,"results":"21","hashOfConfig":"15"},{"size":355,"mtime":1621251901827,"results":"22","hashOfConfig":"15"},{"size":260,"mtime":1621256430670,"results":"23","hashOfConfig":"15"},{"size":1897,"mtime":1621857538584,"results":"24","hashOfConfig":"15"},{"size":1902,"mtime":1621857771854,"results":"25","hashOfConfig":"15"},{"size":7918,"mtime":1622463867864,"results":"26","hashOfConfig":"15"},{"size":387,"mtime":1621860033758,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1yw5x87",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"/Users/gimdohyeon/FirstReact/movie_app/src/index.js",[],["62","63"],"/Users/gimdohyeon/FirstReact/movie_app/src/App.js",[],"/Users/gimdohyeon/FirstReact/movie_app/src/components/globalStyles.js",[],"/Users/gimdohyeon/FirstReact/movie_app/src/components/header.js",["64"],"import styled from 'styled-components';\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faSortDown,faSearch} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {Link} from 'react-router-dom';\nimport { useState, useEffect } from 'react/cjs/react.development';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport instance from './instance';\n\nlibrary.add(faSearch, faSortDown);\n\nconst Navbar = styled.nav`\n  position: sticky;\n  top: 0;\n  left: 0;\n  right: 0;\n  min-height: 50px;\n  z-index: 1000;\n  background: var(--bg);\n  .logo{\n    color: var(--red);\n  }\n  .container{\n    display: flex;\n    justify-content: space-between;\n    min-height: 50px;\n    align-items: center;\n    .searchType{\n      button{\n        font-size: 13px;\n        background: transparent;\n        color: #fff;\n        border: 0;\n        outline: 0;\n        cursor: pointer;\n        span{\n          margin-left: 10px;\n          display: inline-block;\n          transition: all 0.2s ease-in-out;\n        }\n        transition: color 0.2s ease-in-out;\n        &:first-child{\n          margin-right: 10px\n        }\n        &:hover, &.on{\n          color: var(--red);\n          span{\n            transform: rotate(180deg);\n            transform-origin: center;\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst List = styled.div`\n  position: fixed;\n  top: -200px;\n  left: 0;\n  right: 0;\n  z-index: 1001;\n  background: #1a1824;\n  transition: top 0.3s ease-in-out;\n  padding-top: 50px;\n  &.active{\n    top: 50px;\n  }\n  ul{\n    li{\n      display: inline-flex;\n      margin: 3px;\n      a{\n        background: var(--red);\n        color: #fff;\n        padding: 10px 30px;\n        border-radius: 5px;\n      }\n    }\n  }\n`;\n\nconst yearFunction = () => {\n  const currentYear = new Date().getFullYear();\n  const endYear = currentYear - 22;\n  const yearArray = [];\n  for(let i = currentYear; i > endYear; i--){\n    yearArray.push(i);\n  }\n  return yearArray;\n};\n\nconst Header = () => {\n\n  const [listGenre, setListGenre] = useState([]);\n  const [btn1,setBtn1] = useState(false)\n  const [btn2,setBtn2] = useState(false)\n\n  const yearValues = yearFunction();\n\n  const handleBtn1 = () => {\n    setBtn1(!btn1);\n    setBtn2(false);\n  }\n\n  const handleBtn2 = () => {\n    setBtn1(false);\n    setBtn2(!btn2);\n  }\n\n  const getData = async() =>{\n    const {\n            data: { genres},\n          } = await instance.get(`/genre/movie/list`);\n\n    setListGenre(genres);\n  }\n\n  useEffect(() => {\n    console.log(yearValues);\n    getData();\n    }, []);\n\n  return (\n  <>\n        <Navbar>\n      <div className=\"container\">\n        <Link to=\"/\" className=\"logo\">MOVIE DB</Link>\n        <div className=\"searchType\">\n        <button type=\"button\" className={btn1 ? \"on\" : \"\"} onClick={handleBtn1}>\n          장르별\n          <span>\n          <FontAwesomeIcon icon=\"sort-down\" />\n          </span>\n          </button>\n        <button type=\"button\" className={btn2 ? \"on\" : \"\"} onClick={handleBtn2}>\n          연도별\n          <span>\n          <FontAwesomeIcon icon=\"sort-down\" />\n          </span>\n          </button>\n        </div>\n      </div>\n    </Navbar>\n    <List className={btn1 ? \"active\" : \"\"}>\n      <ul className=\"#container\">\n        {listGenre.map((item, index) => (\n          <li key={index}>\n            <Link to={`/genres/${item.id}`}>{item.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </List>\n    <List className={btn2 ? \"active\" : \"\"}>\n      <ul className=\"#container\">\n        {yearValues.map((item, index) => (\n          <li key={index}>\n            <Link to={`/year/${item}`}>{item}</Link>\n          </li>\n        ))}\n      </ul>\n    </List>\n  </>\n    );\n}\n\nexport default Header;","/Users/gimdohyeon/FirstReact/movie_app/src/pages/main.js",["65","66","67","68","69","70","71","72","73"],"import { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {Link} from \"react-router-dom\";\n\nimport { CircularProgressbar,buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport axios from 'axios';\n\nimport {API_URL, API_KEY, IMAGE_BASE_URL} from '../constants/constants';\n\nimport MovieListItem from '../components/movieListItem';\n\nimport Loader from '../components/loader';\n\nlibrary.add(faSearch);\n\n\n\nconst Searchbar = styled.div`\n  position: sticky;\n  top: 50px;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  min-height: 50px;\n  background: var(--bg);\n  .container{\n    input{\n      width: 100%;\n      padding: 6.5px 6.5px 6.5px 37.5px;\n      background: var(--bg);\n      border: 1px solid #495162;\n      border-radius: 3px;\n      outline: 0;\n      color: #fff;\n      transition: all 0.2s ease-in-out;\n      &:focus {\n        background: #fff;\n        border: 1px solid red !important;\n        color: var(--bg);\n      }\n    }\n    .icon{\n      position: absolute;\n      top: 3px;\n      left: 10px;\n      color: var(--text);\n      &.inputActive{\n        color: var(--red);\n      }\n    }\n  }\n`;\n\nconst MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst ViewMoreButton = styled.button`\n  display: block;\n  margin: 40px auto;\n  background: var(--red);\n  color: #fff;\n  border: 0;\n  outline: 0;\n  padding: 20px 40px;\n  cursor: pointer;\n`;\n\nconst MovieItem = styled.li`\n  width: 25%;\n  padding: 10px;\n  a{\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n  }\n  @media(max-width: 767px;){\n    width: 50%;\n  }\n  .mvInfo{\n    position: relative;\n    padding: 10px 40px 8px 8px;\n    .year{\n      font-size: 11px;\n      color: #fff;\n    }\n    .mvName{\n      font-size: 17px;\n      color: var(--red);\n      font-weight: bold;\n    }\n    .rate{\n      position: absolute;\n      right: 0;\n      top: 50%;\n      transform: translateY(-50%);\n      width: 26px;\n      height: 26px;\n      .CircularProgressbar .CirularProgressbar-text{\n        font-size: 30px;\n      }\n    }\n  }\n`;\n\nfunction Main() {\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [inputActive, setInputActive] = useState(false);\n\n  // 로딩중\n  const [isLoaded, setIsLoaded] = useState(true);\n  // 영화 목록\n  const [movies, setMovies] = useState([]);\n  // 페이지 번호\n  const [page, setPage] = useState(1);\n  // 전체 페이지 갯수\n  const [totalPages, setTotalPages] = useState(0);\n  // 전체 영화 갯수\n  const [totalResults, setTotalResults] = useState(0);\n  //스피너 색상\n  const [color, setColor] = useState('#ffffff');\n  \n  const searchAction = (e) => {\n    setSearchText(e.target.value);\n    setMovies([]);\n    fetchData(`${API_URL}search/movieapi_key=${API_KEY}&\n    language=ko-KR&page=${1}&query=${searchText}`);\n  };\n\n  const focusHandler = () => {\n    setInputActive(!inputActive);\n  }\n\n  const fetchData = async(url) => {\n    setIsLoaded(true);\n    const result = await axios.get(url);\n    console.log(result.data.results);\n    setMovies([...movies, ...result.data.results]);\n    setPage(result.data.page);\n    setTotalPages(result.total_pages);\n    setTotalResults(result.total_results);\n    setIsLoaded(false);\n  };\n\n  const more = () => {\n    if(searchText === ''){\n      fetchData(`${API_URL}movie/popular?api_key=${API_KEY}&\n      language=ko-KR&page=${page+1}`);\n    } else {\n      fetchData(`${API_URL}search/movieapi_key=${API_KEY}&\n    language=ko-KR&page=${page + 1}&query=${searchText}`);\n    }\n    console.log(\"more\");\n    fetchData(`${API_URL}movie/popular?api_key=${API_KEY}&\n    language=ko-KR&page=${page+1}`);\n  }\n\n  //https://api.themoviedb.org/3/movie/popular?api_key=<<api_key>>&language=en-US&page=1\n  //아래 api key\n  //621db96eb0c46832b8cf5b22234a386b\n  useEffect(() => {\n    if(searchText === ''){\n\n      fetchData(`${API_URL}movie/popular?api_key=${API_KEY}&\n      language=ko-KR&page=${page}`);\n    } else {\n      fetchData(`${API_URL}search/movieapi_key=${API_KEY}&\n    language=ko-KR&page=${page}&query=${searchText}`);\n    }\n  }, [searchText]);\n\n  return (\n  <>\n    <Searchbar>\n    <div className=\"container\">\n      <span className={inputActive ? \"icon inputActive\": \"icon\"}>\n        <FontAwesomeIcon icon=\"search\" />\n      </span>        \n      <input type=\"text\" \n      value={searchText} \n      onFocus={focusHandler}\n      onBlur={focusHandler}\n      onChange={searchAction} \n      placeholder=\"영화를 검색하세요.\" />\n    </div>\n    </Searchbar>\n    <div className=\"container\">\n      <MovieList>\n        {\n          movies.map((item, index) => (\n            <MovieListItem key={index} item={item} />\n            ))\n          }\n      </MovieList>\n          <Loader isLoaded={isLoaded} />\n          {page >= totalPages ? null : (\n            <ViewMoreButton type=\"button\" onClick=\n            {more}>더보기</ViewMoreButton>\n            )}\n    </div>\n  </>\n  );\n}\n\nexport default Main;\n","/Users/gimdohyeon/FirstReact/movie_app/src/constants/constants.js",[],"/Users/gimdohyeon/FirstReact/movie_app/src/components/movieListItem.js",["74","75","76","77","78","79","80","81"],"import { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {Link} from \"react-router-dom\";\n\nimport { CircularProgressbar,buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport axios from 'axios';\n\nimport {API_URL, API_KEY, IMAGE_BASE_URL} from '../constants/constants';\n\nconst MovieItem = styled.li`\n  width: 25%;\n  padding: 10px;\n  a{\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n  }\n  @media(max-width: 767px;){\n    width: 50%;\n  }\n  .mvInfo{\n    position: relative;\n    padding: 10px 40px 8px 8px;\n    .year{\n      font-size: 11px;\n      color: #fff;\n    }\n    .mvName{\n      font-size: 17px;\n      color: var(--red);\n      font-weight: bold;\n    }\n    .rate{\n      position: absolute;\n      right: 0;\n      top: 50%;\n      transform: translateY(-50%);\n      width: 26px;\n      height: 26px;\n      .CircularProgressbar .CirularProgressbar-text{\n        font-size: 30px;\n      }\n    }\n  }\n`;\n\nfunction MovieListItem({item}){\n  return(\n    <MovieItem>\n          <Link to={`/movie/${item.id}`}>\n            <img \n            src={`${IMAGE_BASE_URL}w500${item.poster_path}`} \n            alt={item.title}\n            className=\"img-auto\" \n            />\n            <div className=\"mvInfo\">\n            <p className=\"year\">{item.release_date}</p>\n            <p className=\"mvName\">{item.title}</p>\n            <p className=\"rate\">\n              <CircularProgressbar \n              value={item.vote_average * 10} \n              text={`${item.vote_average}%`} \n              styles={buildStyles({\n                pathColor: `#dc2d43`,\n                textColor: \"#dc2d43\",\n                trailColor: \"#d6d6d6\",\n                backgroundColor: \"#dc2d43\",\n              })} />\n            </p>\n            </div>\n          </Link>\n        </MovieItem>\n  );\n}\n\nexport default MovieListItem;","/Users/gimdohyeon/FirstReact/movie_app/src/components/loader.js",[],"/Users/gimdohyeon/FirstReact/movie_app/src/components/instance.js",[],"/Users/gimdohyeon/FirstReact/movie_app/src/genres/genres.js",["82","83"],"import {useEffect, useState} from \"react\";\nimport instance from '../components/instance';\nimport styled from 'styled-components';\n\nimport MovieListItem from '../components/movieListItem';\n\nconst MovieList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst ViewMoreButton = styled.button`\n  display: block;\n  margin: 40px auto;\n  background: var(--red);\n  color: #fff;\n  border: 0;\n  outline: 0;\n  padding: 20px 40px;\n  cursor: pointer;\n`;\n\nconst Genres = ({match}) => {\n\n    const [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [totalResults, setTotalResults] = useState(0);\n    const [movies, setMovies] = useState([]);\n\n    const [id,setId] = useState(null);\n\n    const fetchData = async () => {\n        const result = await instance.get(`discover/movie?with_genres=${match.params.id}&page=${page}`);\n\n        if(id !== match.params.id && id) {\n            setMovies([...result.data.results]);\n        } else {\n            setMovies([...result.data.results]);\n        }\n        console.log(result.data.results);\n        setPage(result.data.page);\n        setTotalPages(result.data.total_pages);\n        setTotalResults(result.data.total_results);\n    };\n\n    const more = () => {\n        setPage(page+1);\n    }\n\n    useEffect(() => {\n        console.log(match.params.id);\n        const { id: idNum } = match.params;\n        setId(idNum);\n        if (idNum) {\n            fetchData();\n        }\n    }, [page, match.params.id]);\n    return (\n    <div className=\"constainer\">\n        <MovieList>\n            {movies.map((item, index)=>(\n                <MovieListItem key={index} item={item} />\n            ))}\n        </MovieList>\n        {page >= totalPages ? null : (\n            <ViewMoreButton type=\"button\" onClick={more}>\n                더보기\n            </ViewMoreButton>\n        )}\n    </div>\n    );\n}\n\nexport default Genres;","/Users/gimdohyeon/FirstReact/movie_app/src/year/year.js",["84","85"],"import {useEffect, useState} from \"react\";\nimport instance from '../components/instance';\nimport styled from 'styled-components';\n\nimport MovieListItem from '../components/movieListItem';\n\nconst MovieList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst ViewMoreButton = styled.button`\n  display: block;\n  margin: 40px auto;\n  background: var(--red);\n  color: #fff;\n  border: 0;\n  outline: 0;\n  padding: 20px 40px;\n  cursor: pointer;\n`;\n\nconst Year = ({match}) => {\n\n    const [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [totalResults, setTotalResults] = useState(0);\n    const [movies, setMovies] = useState([]);\n\n    const [id,setId] = useState(null);\n\n    const fetchData = async () => {\n        const result = await instance.get(`discover/movie?primary_release_year=${match.params.id}&page=${page}`);\n\n        if(id !== match.params.id && id) {\n            setMovies([...result.data.results]);\n        } else {\n            setMovies([...result.data.results]);\n        }\n        console.log(result.data.results);\n        setPage(result.data.page);\n        setTotalPages(result.data.total_pages);\n        setTotalResults(result.data.total_results);\n    };\n\n    const more = () => {\n        setPage(page+1);\n    }\n\n    useEffect(() => {\n        console.log(match.params.id);\n        const { id: idNum } = match.params;\n        setId(idNum);\n        if (idNum) {\n            fetchData();\n        }\n    }, [page, match.params.id]);\n    return (\n    <div className=\"constainer\">\n        <MovieList>\n            {movies.map((item, index)=>(\n                <MovieListItem key={index} item={item} />\n            ))}\n        </MovieList>\n        {page >= totalPages ? null : (\n            <ViewMoreButton type=\"button\" onClick={more}>\n                더보기\n            </ViewMoreButton>\n        )}\n    </div>\n    );\n}\n\nexport default Year;","/Users/gimdohyeon/FirstReact/movie_app/src/movieDetail/movieDetail.js",["86","87","88"],"import {useEffect, useState} from 'react';\nimport instance from '../components/instance';\nimport styled from 'styled-components';\nimport {IMAGE_BASE_URL} from '../constants/constants';\nimport BgImage from './bgImage';\nimport moment from 'moment';\nimport axios from \"axios\";\n\nimport { CircularProgressbar,buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst UpperInfo = styled.div`\n    position: relative;\n    height: 300px;\n`;\n\nconst BgImg = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\n\nconst BackDropImg = styled.img`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`;\n\nconst ImgContainer = styled.div`\n    float: left;\n    width: 33.33333%;\n    padding: 15px;\n    img{\n        max-width: 100%;\n        max-height: 450px;\n    }\n`;\nconst InfoContainer = styled.div`\n    float: right;\n    width: 66.66666%;\n    padding: 15px;\n    .inline{\n        display: inline-block;\n        margin-right: 15px;\n    }\n    .title{\n        font-size: 24px;\n    }\n    .circle{\n        width: 50px;\n        height: 50px;\n        backgoround: rgha(0, 0, 0, 0.5);\n        border-radius: 100%;\n        padding: 3px;\n    }\n    .trailerBtn{\n        color: #fff;\n        background: var(--red);\n        padding: 20px 20px;\n        border-radius: 5px;\n    }\n`;\n\nconst Modal = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.7);\n    z-index: 100000;\n    iframe{\n        width: 600px;\n        height: 400px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transfom: translateX(-50%) translateY(-50%);\n    }\n    .closeBtn{\n        position: absolute;\n        top: 50px;\n        right: 50px;\n        color: #fff;\n        background: #000;\n        font-size: 20px;\n    }\n`;\n\nconst Actors = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    li{\n        width: 25%;\n        padding: 10px;\n        img{\n            max-width: 100%;\n        }\n    }\n    .actor-info{\n        color: var(--red);\n        font-size: 16px;\n        font-weight: bold;\n        .as{\n            color: #666;\n            font-size: 12px;\n            margin-left: 10px;\n            margin-right: 10px;\n        }\n        .character{\n            color: #fff;\n            font-size: 14px;\n        }\n    }\n`;\n\nconst MovieDetail = ({match}) => {\n\n    const [backDropImg, setBackDropImg] = useState(\"\");\n    const [posterPath, setPosterPath] = useState(\"\");\n    const [title, setTitle] = useState(\"\"); //제목\n    const [relDate, setReldate] = useState(\"\"); //릴리즈 날짜\n    const [genres, setGenres] = useState([]); //장르\n    const [runTime, setRuntime] = useState(\"\"); //상영시간\n    const [voteAverage, setVoteAverage] = useState(0); //평점\n    const [video, setVideo] = useState(\"\"); //비디오\n    const [modal, setModal] = useState(false); //모달 출력 여부\n    const [actors, setActors] = useState([]);\n\n    const getMovieDetail = async () => {\n        const result = await instance.get(`movie/${match.params.id}`);\n        setBackDropImg(result.data.backdrop_path);\n        setPosterPath(result.data.poster_path);\n        setTitle(result.data.title);\n        setReldate(moment(result.data.release_date).format(\"YYYY\"));\n        setGenres(result.data.genres[0]);\n        const rt = minToHourAndMin(result.data.runtime);\n        setRuntime(rt);\n        setVoteAverage(result.data.vote_average);\n\n        const trailerRequest = await axios.get(\n            `https://api.themoviedb.org/3/movie/${match.params.id}/videos?\n            api_key=621db96eb0c46832b8cf5b22234a386b`\n        );\n        setVideo(trailerRequest.data.results[0].key);\n        const credits = await axios.get(\n            `https://api.themoviedb.org/3/movie/${match.params.id}/credits?\n            api_key=621db96eb0c46832b8cf5b22234a386b`\n        );\n\n        const acting = credits.data.cast.filter(\n            (item) => item.known_for_department==\"Acting\"\n        );\n        setActors(acting);\n    };\n\n    //상영시간을 시간 분으로 리턴\n    const minToHourAndMin = (e) => {\n        const h = Math.floor(e/60);\n        const m = e % 60;\n        return `${h}시간 ${m}분`;\n    }\n\n    useEffect(() => {\n        const { id } = match.params;\n        if (id) getMovieDetail();\n    }, []);\n\n    return (\n        <>\n            <UpperInfo>\n                <BackDropImg src={`${IMAGE_BASE_URL}w1280${backDropImg}` }\n                    alt=\"\" />\n                <BgImage \n                    imgSrc={\n                        backDropImg \n                        ? `${IMAGE_BASE_URL}w1280${backDropImg}` \n                        : `https://via.placeholder.com/1280x500`\n                        } \n                        />\n                <div className=\"container\">\n                    <ImgContainer>\n                        <img src={`${IMAGE_BASE_URL}w500${posterPath}`} alt=\"{title}\" />\n                    </ImgContainer>\n                    <InfoContainer>\n                            <h1 className=\"inline title\">{title}</h1>\n                            <p className=\"inline\">{relDate}</p>\n                            {genres.map((item, index)=>(\n                                <p className=\"inline\" key={index}>{item.name}</p>\n                                ))}\n                            <p className=\"inline\">{runTime}</p>\n                            <div className=\"circle\">\n                                <CircularProgressbar \n                                    value={voteAverage * 10} \n                                    text={`${voteAverage}%`} \n                                    styles={buildStyles({\n                                        pathColor: `#dc2d43`,\n                                        textColor: \"#dc2d43\",\n                                        trailColor: \"#d6d6d6\",\n                                        backgroundColor: \"#dc2d43\",\n                                    })} />  \n                            </div>\n                            <button type=\"button\" className=\"trailerBtn\" onClick={()=> setModal(true)}>\n                                PLAY TRAILER\n                            </button>\n                        </InfoContainer>\n                </div>\n            </UpperInfo>\n            <div className=\"container\">\n                <Actors>\n                    {actors.map((item, index) => (\n                        <li>\n                            {/* <img src={`${IMAGE_BASE_URL}w342${item.profile_path}`} \n                            alt={item.name} /> */}\n                            <img \n                                src={\n                                    item.profile_path\n                                    ? `${IMAGE_BASE_URL}w342${item.profile_path}`\n                                    : `https://via.placeholder.com/324x5137?text=NO_IMAGE`\n                            } alt={item.name} />\n                            <div className=\"actor-info\">\n                            {item.name} <span>as</span>  \n                            <span className=\"character\">{item.character}</span>\n                            </div>\n                        </li>\n                    ))}\n                </Actors>\n            </div>\n            {modal ? (\n                    <Modal>\n                        <button type=\"button\" \n                        className=\"closeBtn\" \n                        onClick={() => setModal(false)}\n                        >\n                            닫기\n                        </button>\n                        <iframe src={`https://www.youtube.com/embed/${video}`} \n                        title={title} \n                        frameborder=\"0\"\n                        ></iframe>\n                    </Modal>\n                ):null}\n        </>\n    );\n}\n\nexport default MovieDetail;","/Users/gimdohyeon/FirstReact/movie_app/src/movieDetail/bgImage.js",["89","90","91"],"import styled from 'styled-components';\nimport Palette, {usePalette} from 'react-palette';\n\nconst BgImg = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\n\nconst BgImage = ({imgSrc}) => {\n\n    const {data, loading, error} = usePalette(imgSrc);\n\n    return (<BgImg style={{background: data.vibrant, opacity: 0.5}} />)\n}\n\nexport default BgImage;",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":123,"column":8,"nodeType":"98","endLine":123,"endColumn":10,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":7,"column":9,"nodeType":"102","messageId":"103","endLine":7,"endColumn":13},{"ruleId":"100","severity":1,"message":"104","line":9,"column":10,"nodeType":"102","messageId":"103","endLine":9,"endColumn":29},{"ruleId":"100","severity":1,"message":"105","line":9,"column":30,"nodeType":"102","messageId":"103","endLine":9,"endColumn":41},{"ruleId":"100","severity":1,"message":"106","line":14,"column":27,"nodeType":"102","messageId":"103","endLine":14,"endColumn":41},{"ruleId":"100","severity":1,"message":"107","line":76,"column":7,"nodeType":"102","messageId":"103","endLine":76,"endColumn":16},{"ruleId":"100","severity":1,"message":"108","line":128,"column":10,"nodeType":"102","messageId":"103","endLine":128,"endColumn":22},{"ruleId":"100","severity":1,"message":"109","line":130,"column":10,"nodeType":"102","messageId":"103","endLine":130,"endColumn":15},{"ruleId":"100","severity":1,"message":"110","line":130,"column":17,"nodeType":"102","messageId":"103","endLine":130,"endColumn":25},{"ruleId":"96","severity":1,"message":"111","line":179,"column":6,"nodeType":"98","endLine":179,"endColumn":18,"suggestions":"112"},{"ruleId":"100","severity":1,"message":"113","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":18},{"ruleId":"100","severity":1,"message":"114","line":1,"column":20,"nodeType":"102","messageId":"103","endLine":1,"endColumn":29},{"ruleId":"100","severity":1,"message":"115","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":25},{"ruleId":"100","severity":1,"message":"116","line":4,"column":9,"nodeType":"102","messageId":"103","endLine":4,"endColumn":16},{"ruleId":"100","severity":1,"message":"117","line":5,"column":9,"nodeType":"102","messageId":"103","endLine":5,"endColumn":17},{"ruleId":"100","severity":1,"message":"118","line":12,"column":8,"nodeType":"102","messageId":"103","endLine":12,"endColumn":13},{"ruleId":"100","severity":1,"message":"119","line":14,"column":9,"nodeType":"102","messageId":"103","endLine":14,"endColumn":16},{"ruleId":"100","severity":1,"message":"120","line":14,"column":18,"nodeType":"102","messageId":"103","endLine":14,"endColumn":25},{"ruleId":"100","severity":1,"message":"108","line":27,"column":12,"nodeType":"102","messageId":"103","endLine":27,"endColumn":24},{"ruleId":"96","severity":1,"message":"121","line":57,"column":8,"nodeType":"98","endLine":57,"endColumn":31,"suggestions":"122"},{"ruleId":"100","severity":1,"message":"108","line":27,"column":12,"nodeType":"102","messageId":"103","endLine":27,"endColumn":24},{"ruleId":"96","severity":1,"message":"121","line":57,"column":8,"nodeType":"98","endLine":57,"endColumn":31,"suggestions":"123"},{"ruleId":"100","severity":1,"message":"124","line":17,"column":7,"nodeType":"102","messageId":"103","endLine":17,"endColumn":12},{"ruleId":"125","severity":1,"message":"126","line":159,"column":48,"nodeType":"127","messageId":"128","endLine":159,"endColumn":50},{"ruleId":"96","severity":1,"message":"129","line":174,"column":8,"nodeType":"98","endLine":174,"endColumn":10,"suggestions":"130"},{"ruleId":"100","severity":1,"message":"131","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":15},{"ruleId":"100","severity":1,"message":"132","line":14,"column":18,"nodeType":"102","messageId":"103","endLine":14,"endColumn":25},{"ruleId":"100","severity":1,"message":"133","line":14,"column":27,"nodeType":"102","messageId":"103","endLine":14,"endColumn":32},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'yearValues'. Either include it or remove the dependency array.","ArrayExpression",["136"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'CircularProgressbar' is defined but never used.","'buildStyles' is defined but never used.","'IMAGE_BASE_URL' is defined but never used.","'MovieItem' is assigned a value but never used.","'totalResults' is assigned a value but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchData' and 'page'. Either include them or remove the dependency array.",["137"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'library' is defined but never used.","'faSearch' is defined but never used.","'axios' is defined but never used.","'API_URL' is defined but never used.","'API_KEY' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchData' and 'match.params'. Either include them or remove the dependency array.",["138"],["139"],"'BgImg' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getMovieDetail' and 'match.params'. Either include them or remove the dependency array.",["140"],"'Palette' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"145","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [yearValues]",{"range":"150","text":"151"},"Update the dependencies array to be: [fetchData, page, searchText]",{"range":"152","text":"153"},"Update the dependencies array to be: [page, match.params.id, match.params, fetchData]",{"range":"154","text":"155"},{"range":"156","text":"155"},"Update the dependencies array to be: [getMovieDetail, match.params]",{"range":"157","text":"158"},[2526,2528],"[yearValues]",[4235,4247],"[fetchData, page, searchText]",[1462,1485],"[page, match.params.id, match.params, fetchData]",[1469,1492],[4339,4341],"[getMovieDetail, match.params]"]
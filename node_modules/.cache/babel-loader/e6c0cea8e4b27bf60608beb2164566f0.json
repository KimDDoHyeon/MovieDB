{"ast":null,"code":"var _jsxFileName = \"/Users/gimdohyeon/FirstReact/movie_app/src/movieDetail/movieDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport instance from '../components/instance';\nimport styled from 'styled-components';\nimport { IMAGE_BASE_URL } from '../constants/constants';\nimport BgImage from './bgImage';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpperInfo = styled.div`\n    position: relative;\n    height: 300px;\n`;\n_c = UpperInfo;\nconst BgImg = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\nconst BackDropImg = styled.img`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`;\n_c2 = BackDropImg;\nconst ImgContainer = styled.div`\n    float: left;\n    width: 33.33333%;\n    padding: 15px;\n    img{\n        max-width: 100%;\n    }\n`;\n_c3 = ImgContainer;\nconst InfoContainer = styled.div`\n    float: right;\n    width: 66.66666%;\n`;\n\nconst MovieDetail = ({\n  match\n}) => {\n  _s();\n\n  const [backDropImg, setBackDropImg] = useState(\"\");\n  const [posterPath, setPosterPath] = useState(\"\");\n  const [title, setTitle] = useState(\"\"); //제목\n\n  const [relDate, setReldate] = useState(\"\"); //릴리즈 날짜\n\n  const [genres, setGenres] = useState([]); //장르\n\n  const [runTime, setRuntime] = useState(\"\"); //상영시간\n\n  const getMovieDetail = async () => {\n    const result = await instance.get(`movie/${match.params.id}`);\n    setBackDropImg(result.data.backdrop_path);\n    setPosterPath(result.data.poster_path);\n    setTitle(result.data.title);\n    setReldate(moment(result.data.release_date).format(\"YYYY\"));\n    setGenres(result.data.genres[0]);\n    const rt = minToHourAndMin(result.data.runtime);\n    setRuntime(rt);\n  }; //상영시간을 시간 분으로 리턴\n\n\n  const minToHourAndMin = e => {\n    const h = Math.floor(e / 60);\n    const m = e % 60;\n    return `${h}시간 ${m}분`;\n  };\n\n  useEffect(() => {\n    const {\n      id\n    } = match.params;\n    if (id) getMovieDetail();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UpperInfo, {\n      children: [/*#__PURE__*/_jsxDEV(BackDropImg, {\n        src: `${IMAGE_BASE_URL}w1280${backDropImg}`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BgImage, {\n        imgSrc: backDropImg ? `${IMAGE_BASE_URL}w1280${backDropImg}` : `https://via.placeholder.com/1280x500`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(ImgContainer, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${IMAGE_BASE_URL}w1280${backDropImg}`,\n            alt: \"{title}\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: relDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), genres.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: runTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MovieDetail, \"5MvoD4AUtF5ca352RobJ1pB7pVo=\");\n\n_c4 = MovieDetail;\nexport default MovieDetail;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"UpperInfo\");\n$RefreshReg$(_c2, \"BackDropImg\");\n$RefreshReg$(_c3, \"ImgContainer\");\n$RefreshReg$(_c4, \"MovieDetail\");","map":{"version":3,"sources":["/Users/gimdohyeon/FirstReact/movie_app/src/movieDetail/movieDetail.js"],"names":["useEffect","useState","instance","styled","IMAGE_BASE_URL","BgImage","moment","UpperInfo","div","BgImg","BackDropImg","img","ImgContainer","InfoContainer","MovieDetail","match","backDropImg","setBackDropImg","posterPath","setPosterPath","title","setTitle","relDate","setReldate","genres","setGenres","runTime","setRuntime","getMovieDetail","result","get","params","id","data","backdrop_path","poster_path","release_date","format","rt","minToHourAndMin","runtime","e","h","Math","floor","m","map","item","index","name"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport instance from '../components/instance';\nimport styled from 'styled-components';\nimport {IMAGE_BASE_URL} from '../constants/constants';\nimport BgImage from './bgImage';\nimport moment from 'moment';\n\nconst UpperInfo = styled.div`\n    position: relative;\n    height: 300px;\n`;\n\nconst BgImg = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\n\nconst BackDropImg = styled.img`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`;\n\nconst ImgContainer = styled.div`\n    float: left;\n    width: 33.33333%;\n    padding: 15px;\n    img{\n        max-width: 100%;\n    }\n`;\nconst InfoContainer = styled.div`\n    float: right;\n    width: 66.66666%;\n`;\n\nconst MovieDetail = ({match}) => {\n\n    const [backDropImg, setBackDropImg] = useState(\"\");\n    const [posterPath, setPosterPath] = useState(\"\");\n    const [title, setTitle] = useState(\"\"); //제목\n    const [relDate, setReldate] = useState(\"\"); //릴리즈 날짜\n    const [genres, setGenres] = useState([]); //장르\n    const [runTime, setRuntime] = useState(\"\"); //상영시간\n\n    const getMovieDetail = async () => {\n        const result = await instance.get(`movie/${match.params.id}`);\n        setBackDropImg(result.data.backdrop_path);\n        setPosterPath(result.data.poster_path);\n        setTitle(result.data.title);\n        setReldate(moment(result.data.release_date).format(\"YYYY\"));\n        setGenres(result.data.genres[0]);\n        const rt = minToHourAndMin(result.data.runtime);\n        setRuntime(rt);\n    };\n\n    //상영시간을 시간 분으로 리턴\n    const minToHourAndMin = (e) => {\n        const h = Math.floor(e/60);\n        const m = e % 60;\n        return `${h}시간 ${m}분`;\n    }\n\n    useEffect(() => {\n        const { id } = match.params;\n        if (id) getMovieDetail();\n    }, []);\n\n    return (\n        <>\n            <UpperInfo>\n                <BackDropImg src={`${IMAGE_BASE_URL}w1280${backDropImg}` }\n                 alt=\"\" />\n                <BgImage \n                imgSrc={\n                    backDropImg \n                    ? `${IMAGE_BASE_URL}w1280${backDropImg}` \n                    : `https://via.placeholder.com/1280x500`\n                    } \n                    />\n                <div className=\"container\">\n                    <ImgContainer>\n                        <img src={`${IMAGE_BASE_URL}w1280${backDropImg}`} alt=\"{title}\" />\n                    </ImgContainer>\n                    <h1>{title}</h1>\n                    <p>{relDate}</p>\n                    {genres.map((item, index)=>(\n                        <p key={index}>{item.name}</p>\n                    ))}\n                    <p>{runTime}</p>\n                </div>\n            </UpperInfo>\n        </>\n    );\n}\n\nexport default MovieDetail;"]},"metadata":{},"sourceType":"module"}
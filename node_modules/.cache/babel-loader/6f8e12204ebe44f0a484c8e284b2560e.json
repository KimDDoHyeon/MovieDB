{"ast":null,"code":"var _jsxFileName = \"/Users/gimdohyeon/FirstReact/movie_app/src/movieDetail/movieDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport instance from '../components/instance';\nimport styled from 'styled-components';\nimport { IMAGE_BASE_URL } from '../constants/constants';\nimport BgImage from './bgImage';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpperInfo = styled.div`\n    position: relative;\n    height: 300px;\n`;\n_c = UpperInfo;\nconst BgImg = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\nconst BackDropImg = styled.img`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`;\n_c2 = BackDropImg;\n\nconst MovieDetail = ({\n  match\n}) => {\n  _s();\n\n  const [backDropImg, setBackDropImg] = useState(\"\");\n  const [posterPath, setPosterPath] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [relDate, setReldate] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n\n  const getMovieDetail = async () => {\n    const result = await instance.get(`movie/${match.params.id}`);\n    setBackDropImg(result.data.backdrop_path);\n    setPosterPath(result.data.poster_path);\n    setTitle(result.data.title);\n    setReldate(moment(result.data.release_date).format(\"YYYY\"));\n    setGenres(result.data.genres[0]);\n  };\n\n  useEffect(() => {\n    const {\n      id\n    } = match.params;\n    if (id) getMovieDetail();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UpperInfo, {\n      children: [/*#__PURE__*/_jsxDEV(BackDropImg, {\n        src: `${IMAGE_BASE_URL}w1280${backDropImg}`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BgImage, {\n        imgSrc: backDropImg ? `${IMAGE_BASE_URL}w1280${backDropImg}` : `https://via.placeholder.com/1280x500`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${IMAGE_BASE_URL}w1280${backDropImg}`,\n          alt: \"{title}\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: relDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), genres.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: genres\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MovieDetail, \"g6ui0AgZoUt/WBpExJCp4y1TFIA=\");\n\n_c3 = MovieDetail;\nexport default MovieDetail;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UpperInfo\");\n$RefreshReg$(_c2, \"BackDropImg\");\n$RefreshReg$(_c3, \"MovieDetail\");","map":{"version":3,"sources":["/Users/gimdohyeon/FirstReact/movie_app/src/movieDetail/movieDetail.js"],"names":["useEffect","useState","instance","styled","IMAGE_BASE_URL","BgImage","moment","UpperInfo","div","BgImg","BackDropImg","img","MovieDetail","match","backDropImg","setBackDropImg","posterPath","setPosterPath","title","setTitle","relDate","setReldate","genres","setGenres","getMovieDetail","result","get","params","id","data","backdrop_path","poster_path","release_date","format","map","item"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport instance from '../components/instance';\nimport styled from 'styled-components';\nimport {IMAGE_BASE_URL} from '../constants/constants';\nimport BgImage from './bgImage';\nimport moment from 'moment';\n\nconst UpperInfo = styled.div`\n    position: relative;\n    height: 300px;\n`;\n\nconst BgImg = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\n\nconst BackDropImg = styled.img`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`;\n\nconst MovieDetail = ({match}) => {\n\n    const [backDropImg, setBackDropImg] = useState(\"\");\n    const [posterPath, setPosterPath] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    const [relDate, setReldate] = useState(\"\");\n    const [genres, setGenres] = useState([]);\n\n    const getMovieDetail = async () => {\n        const result = await instance.get(`movie/${match.params.id}`);\n        setBackDropImg(result.data.backdrop_path);\n        setPosterPath(result.data.poster_path);\n        setTitle(result.data.title);\n        setReldate(moment(result.data.release_date).format(\"YYYY\"));\n        setGenres(result.data.genres[0]);\n    };\n\n    useEffect(() => {\n        const { id } = match.params;\n        if (id) getMovieDetail();\n    }, []);\n\n    return (\n        <>\n            <UpperInfo>\n                <BackDropImg src={`${IMAGE_BASE_URL}w1280${backDropImg}` }\n                 alt=\"\" />\n                <BgImage \n                imgSrc={\n                    backDropImg \n                    ? `${IMAGE_BASE_URL}w1280${backDropImg}` \n                    : `https://via.placeholder.com/1280x500`\n                    } \n                    />\n                <div className=\"container\">\n                    <img src={`${IMAGE_BASE_URL}w1280${backDropImg}`} alt=\"{title}\" />\n                    <h1>{title}</h1>\n                    <p>{relDate}</p>\n                    {genres.map((item)=>(\n                        <p>{genres}</p>\n                    ))}\n                </div>\n            </UpperInfo>\n        </>\n    );\n}\n\nexport default MovieDetail;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/gimdohyeon/FirstReact/movie_app/src/movieDetail/movieDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport instance from '../components/instance';\nimport styled from 'styled-components';\nimport { IMAGE_BASE_URL } from '../constants/constants';\nimport BgImage from './bgImage';\nimport moment from 'moment';\nimport axios from \"axios\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpperInfo = styled.div`\n    position: relative;\n    height: 300px;\n`;\n_c = UpperInfo;\nconst BgImg = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\nconst BackDropImg = styled.img`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`;\n_c2 = BackDropImg;\nconst ImgContainer = styled.div`\n    float: left;\n    width: 33.33333%;\n    padding: 15px;\n    img{\n        max-width: 100%;\n        max-height: 450px;\n    }\n`;\n_c3 = ImgContainer;\nconst InfoContainer = styled.div`\n    float: right;\n    width: 66.66666%;\n    padding: 15px;\n    .inline{\n        display: inline-block;\n        margin-right: 15px;\n    }\n    .title{\n        font-size: 24px;\n    }\n    .circle{\n        width: 50px;\n        height: 50px;\n        backgoround: rgha(0, 0, 0, 0.5);\n        border-radius: 100%;\n        padding: 3px;\n    }\n    .trailerBtn{\n        color: #fff;\n        background: var(--red);\n        padding: 20px 20px;\n        border-radius: 5px;\n    }\n`;\n_c4 = InfoContainer;\nconst Modal = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.7);\n    z-index: 100000;\n    iframe{\n        width: 600px;\n        height: 400px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transfom: translateX(-50%) translateY(-50%);\n    }\n    .closeBtn{\n        position: absolute;\n        top: 50px;\n        right: 50px;\n        color: #fff;\n        background: #000;\n        font-size: 20px;\n    }\n`;\n_c5 = Modal;\nconst Actors = styled.ul`\n    display: flex;\n    .actor-info{\n        color: var(--red);\n        font-size: 16px;\n        font-weight: bold;\n        .as{\n            color: #666;\n            font-size: 12px;\n            margin-left: 10px;\n            margin-right: 10px;\n        }\n        .character{\n            color: #fff;\n            font-size: 14px;\n        }\n    }\n`;\n_c6 = Actors;\n\nconst MovieDetail = ({\n  match\n}) => {\n  _s();\n\n  const [backDropImg, setBackDropImg] = useState(\"\");\n  const [posterPath, setPosterPath] = useState(\"\");\n  const [title, setTitle] = useState(\"\"); //제목\n\n  const [relDate, setReldate] = useState(\"\"); //릴리즈 날짜\n\n  const [genres, setGenres] = useState([]); //장르\n\n  const [runTime, setRuntime] = useState(\"\"); //상영시간\n\n  const [voteAverage, setVoteAverage] = useState(0); //평점\n\n  const [video, setVideo] = useState(\"\"); //비디오\n\n  const [modal, setModal] = useState(false); //모달 출력 여부\n\n  const [actors, setActors] = useState([]);\n\n  const getMovieDetail = async () => {\n    const result = await instance.get(`movie/${match.params.id}`);\n    setBackDropImg(result.data.backdrop_path);\n    setPosterPath(result.data.poster_path);\n    setTitle(result.data.title);\n    setReldate(moment(result.data.release_date).format(\"YYYY\"));\n    setGenres(result.data.genres[0]);\n    const rt = minToHourAndMin(result.data.runtime);\n    setRuntime(rt);\n    setVoteAverage(result.data.vote_average);\n    const trailerRequest = await axios.get(`https://api.themoviedb.org/3/movie/${match.params.id}/videos?\n            api_key=621db96eb0c46832b8cf5b22234a386b`);\n    setVideo(trailerRequest.data.results[0].key);\n    const credits = await axios.get(`https://api.themoviedb.org/3/movie/${match.params.id}/credits?\n            api_key=621db96eb0c46832b8cf5b22234a386b`);\n    const acting = credits.data.cast.filter(item => item.known_for_department == \"Acting\");\n    setActors(acting);\n  }; //상영시간을 시간 분으로 리턴\n\n\n  const minToHourAndMin = e => {\n    const h = Math.floor(e / 60);\n    const m = e % 60;\n    return `${h}시간 ${m}분`;\n  };\n\n  useEffect(() => {\n    const {\n      id\n    } = match.params;\n    if (id) getMovieDetail();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UpperInfo, {\n      children: [/*#__PURE__*/_jsxDEV(BackDropImg, {\n        src: `${IMAGE_BASE_URL}w1280${backDropImg}`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BgImage, {\n        imgSrc: backDropImg ? `${IMAGE_BASE_URL}w1280${backDropImg}` : `https://via.placeholder.com/1280x500`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(ImgContainer, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${IMAGE_BASE_URL}w500${posterPath}`,\n            alt: \"{title}\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"inline title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"inline\",\n            children: relDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this), genres.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"inline\",\n            children: item.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"inline\",\n            children: runTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle\",\n            children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n              value: voteAverage * 10,\n              text: `${voteAverage}%`,\n              styles: buildStyles({\n                pathColor: `#dc2d43`,\n                textColor: \"#dc2d43\",\n                trailColor: \"#d6d6d6\",\n                backgroundColor: \"#dc2d43\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"trailerBtn\",\n            onClick: () => setModal(true),\n            children: \"PLAY TRAILER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Actors, {\n        children: actors.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.profile_path ? `${IMAGE_BASE_URL}w342${item.profile_path}` : `https://via.placeholder.com/324x5137?text=NO_IMAGE`,\n            alt: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actor-info\",\n            children: [item.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"as\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"character\",\n              children: item.character\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), modal ? /*#__PURE__*/_jsxDEV(Modal, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"closeBtn\",\n        onClick: () => setModal(false),\n        children: \"\\uB2EB\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: `https://www.youtube.com/embed/${video}`,\n        title: title,\n        frameborder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(MovieDetail, \"gc2AQ30Cb90K7wrzrVbV+XMPCak=\");\n\n_c7 = MovieDetail;\nexport default MovieDetail;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"UpperInfo\");\n$RefreshReg$(_c2, \"BackDropImg\");\n$RefreshReg$(_c3, \"ImgContainer\");\n$RefreshReg$(_c4, \"InfoContainer\");\n$RefreshReg$(_c5, \"Modal\");\n$RefreshReg$(_c6, \"Actors\");\n$RefreshReg$(_c7, \"MovieDetail\");","map":{"version":3,"sources":["/Users/gimdohyeon/FirstReact/movie_app/src/movieDetail/movieDetail.js"],"names":["useEffect","useState","instance","styled","IMAGE_BASE_URL","BgImage","moment","axios","CircularProgressbar","buildStyles","UpperInfo","div","BgImg","BackDropImg","img","ImgContainer","InfoContainer","Modal","Actors","ul","MovieDetail","match","backDropImg","setBackDropImg","posterPath","setPosterPath","title","setTitle","relDate","setReldate","genres","setGenres","runTime","setRuntime","voteAverage","setVoteAverage","video","setVideo","modal","setModal","actors","setActors","getMovieDetail","result","get","params","id","data","backdrop_path","poster_path","release_date","format","rt","minToHourAndMin","runtime","vote_average","trailerRequest","results","key","credits","acting","cast","filter","item","known_for_department","e","h","Math","floor","m","map","index","name","pathColor","textColor","trailColor","backgroundColor","profile_path","character"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport instance from '../components/instance';\nimport styled from 'styled-components';\nimport {IMAGE_BASE_URL} from '../constants/constants';\nimport BgImage from './bgImage';\nimport moment from 'moment';\nimport axios from \"axios\";\n\nimport { CircularProgressbar,buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst UpperInfo = styled.div`\n    position: relative;\n    height: 300px;\n`;\n\nconst BgImg = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\n\nconst BackDropImg = styled.img`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`;\n\nconst ImgContainer = styled.div`\n    float: left;\n    width: 33.33333%;\n    padding: 15px;\n    img{\n        max-width: 100%;\n        max-height: 450px;\n    }\n`;\nconst InfoContainer = styled.div`\n    float: right;\n    width: 66.66666%;\n    padding: 15px;\n    .inline{\n        display: inline-block;\n        margin-right: 15px;\n    }\n    .title{\n        font-size: 24px;\n    }\n    .circle{\n        width: 50px;\n        height: 50px;\n        backgoround: rgha(0, 0, 0, 0.5);\n        border-radius: 100%;\n        padding: 3px;\n    }\n    .trailerBtn{\n        color: #fff;\n        background: var(--red);\n        padding: 20px 20px;\n        border-radius: 5px;\n    }\n`;\n\nconst Modal = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.7);\n    z-index: 100000;\n    iframe{\n        width: 600px;\n        height: 400px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transfom: translateX(-50%) translateY(-50%);\n    }\n    .closeBtn{\n        position: absolute;\n        top: 50px;\n        right: 50px;\n        color: #fff;\n        background: #000;\n        font-size: 20px;\n    }\n`;\n\nconst Actors = styled.ul`\n    display: flex;\n    .actor-info{\n        color: var(--red);\n        font-size: 16px;\n        font-weight: bold;\n        .as{\n            color: #666;\n            font-size: 12px;\n            margin-left: 10px;\n            margin-right: 10px;\n        }\n        .character{\n            color: #fff;\n            font-size: 14px;\n        }\n    }\n`;\n\nconst MovieDetail = ({match}) => {\n\n    const [backDropImg, setBackDropImg] = useState(\"\");\n    const [posterPath, setPosterPath] = useState(\"\");\n    const [title, setTitle] = useState(\"\"); //제목\n    const [relDate, setReldate] = useState(\"\"); //릴리즈 날짜\n    const [genres, setGenres] = useState([]); //장르\n    const [runTime, setRuntime] = useState(\"\"); //상영시간\n    const [voteAverage, setVoteAverage] = useState(0); //평점\n    const [video, setVideo] = useState(\"\"); //비디오\n    const [modal, setModal] = useState(false); //모달 출력 여부\n    const [actors, setActors] = useState([]);\n\n    const getMovieDetail = async () => {\n        const result = await instance.get(`movie/${match.params.id}`);\n        setBackDropImg(result.data.backdrop_path);\n        setPosterPath(result.data.poster_path);\n        setTitle(result.data.title);\n        setReldate(moment(result.data.release_date).format(\"YYYY\"));\n        setGenres(result.data.genres[0]);\n        const rt = minToHourAndMin(result.data.runtime);\n        setRuntime(rt);\n        setVoteAverage(result.data.vote_average);\n\n        const trailerRequest = await axios.get(\n            `https://api.themoviedb.org/3/movie/${match.params.id}/videos?\n            api_key=621db96eb0c46832b8cf5b22234a386b`\n        );\n        setVideo(trailerRequest.data.results[0].key);\n        const credits = await axios.get(\n            `https://api.themoviedb.org/3/movie/${match.params.id}/credits?\n            api_key=621db96eb0c46832b8cf5b22234a386b`\n        );\n\n        const acting = credits.data.cast.filter(\n            (item) => item.known_for_department==\"Acting\"\n        );\n        setActors(acting);\n    };\n\n    //상영시간을 시간 분으로 리턴\n    const minToHourAndMin = (e) => {\n        const h = Math.floor(e/60);\n        const m = e % 60;\n        return `${h}시간 ${m}분`;\n    }\n\n    useEffect(() => {\n        const { id } = match.params;\n        if (id) getMovieDetail();\n    }, []);\n\n    return (\n        <>\n            <UpperInfo>\n                <BackDropImg src={`${IMAGE_BASE_URL}w1280${backDropImg}` }\n                    alt=\"\" />\n                <BgImage \n                    imgSrc={\n                        backDropImg \n                        ? `${IMAGE_BASE_URL}w1280${backDropImg}` \n                        : `https://via.placeholder.com/1280x500`\n                        } \n                        />\n                <div className=\"container\">\n                    <ImgContainer>\n                        <img src={`${IMAGE_BASE_URL}w500${posterPath}`} alt=\"{title}\" />\n                    </ImgContainer>\n                    <InfoContainer>\n                            <h1 className=\"inline title\">{title}</h1>\n                            <p className=\"inline\">{relDate}</p>\n                            {genres.map((item, index)=>(\n                                <p className=\"inline\" key={index}>{item.name}</p>\n                                ))}\n                            <p className=\"inline\">{runTime}</p>\n                            <div className=\"circle\">\n                                <CircularProgressbar \n                                    value={voteAverage * 10} \n                                    text={`${voteAverage}%`} \n                                    styles={buildStyles({\n                                        pathColor: `#dc2d43`,\n                                        textColor: \"#dc2d43\",\n                                        trailColor: \"#d6d6d6\",\n                                        backgroundColor: \"#dc2d43\",\n                                    })} />  \n                            </div>\n                            <button type=\"button\" className=\"trailerBtn\" onClick={()=> setModal(true)}>\n                                PLAY TRAILER\n                            </button>\n                        </InfoContainer>\n                </div>\n            </UpperInfo>\n            <div className=\"container\">\n                <Actors>\n                    {actors.map((item, index) => (\n                        <li>\n                            {/* <img src={`${IMAGE_BASE_URL}w342${item.profile_path}`} \n                            alt={item.name} /> */}\n                            <img \n                                src={\n                                    item.profile_path\n                                    ? `${IMAGE_BASE_URL}w342${item.profile_path}`\n                                    : `https://via.placeholder.com/324x5137?text=NO_IMAGE`\n                            } alt={item.name} />\n                            <div className=\"actor-info\">\n                            {item.name} <span>as</span>  \n                            <span className=\"character\">{item.character}</span>\n                            </div>\n                        </li>\n                    ))}\n                </Actors>\n            </div>\n            {modal ? (\n                    <Modal>\n                        <button type=\"button\" \n                        className=\"closeBtn\" \n                        onClick={() => setModal(false)}\n                        >\n                            닫기\n                        </button>\n                        <iframe src={`https://www.youtube.com/embed/${video}`} \n                        title={title} \n                        frameborder=\"0\"\n                        ></iframe>\n                    </Modal>\n                ):null}\n        </>\n    );\n}\n\nexport default MovieDetail;"]},"metadata":{},"sourceType":"module"}
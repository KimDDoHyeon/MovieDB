{"ast":null,"code":"var _jsxFileName = \"/Users/gimdohyeon/FirstReact/movie_app/src/genres/genres.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport instance from '../components/instance';\nimport styled from 'styled-components';\nimport MovieListItem from '../components/movieListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = styled.ul`\n    display: flex;\n`;\n_c = MovieList;\n\nconst Genres = ({\n  match\n}) => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalResults, setTotalResults] = useState(0);\n  const [movies, setMovies] = useState([]);\n\n  const fetchData = async () => {\n    const result = await instance.get(`discover/movie?with_genres=${match.params.id}&page=${page}`);\n    console.log(result.data.results);\n    setMovies(result.data.results);\n    setPage(result.data.page);\n    setTotalPages(result.data.total_pages);\n    setTotalResults(result.data.total_results);\n  };\n\n  useEffect(() => {\n    console.log(match.params.id);\n    const {\n      id: idNum\n    } = match.params;\n\n    if (idNum) {\n      fetchData();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"constainer\",\n    children: /*#__PURE__*/_jsxDEV(MovieList, {\n      children: movies.map((item, index) => /*#__PURE__*/_jsxDEV(MovieListItem, {\n        item: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Genres, \"x5SFpsPguCMAwOqueBPJpFbgWJ8=\");\n\n_c2 = Genres;\nexport default Genres;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MovieList\");\n$RefreshReg$(_c2, \"Genres\");","map":{"version":3,"sources":["/Users/gimdohyeon/FirstReact/movie_app/src/genres/genres.js"],"names":["useEffect","useState","instance","styled","MovieListItem","MovieList","ul","Genres","match","page","setPage","totalPages","setTotalPages","totalResults","setTotalResults","movies","setMovies","fetchData","result","get","params","id","console","log","data","results","total_pages","total_results","idNum","map","item","index"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,EAAG;AAC5B;AACA,CAFA;KAAMD,S;;AAIN,MAAME,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAExB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMgB,SAAS,GAAG,YAAY;AAC1B,UAAMC,MAAM,GAAG,MAAMhB,QAAQ,CAACiB,GAAT,CAAc,8BAA6BX,KAAK,CAACY,MAAN,CAAaC,EAAG,SAAQZ,IAAK,EAAxE,CAArB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,IAAP,CAAYC,OAAxB;AACAT,IAAAA,SAAS,CAACE,MAAM,CAACM,IAAP,CAAYC,OAAb,CAAT;AACAf,IAAAA,OAAO,CAACQ,MAAM,CAACM,IAAP,CAAYf,IAAb,CAAP;AACAG,IAAAA,aAAa,CAACM,MAAM,CAACM,IAAP,CAAYE,WAAb,CAAb;AACAZ,IAAAA,eAAe,CAACI,MAAM,CAACM,IAAP,CAAYG,aAAb,CAAf;AACH,GAPD;;AASA3B,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACY,MAAN,CAAaC,EAAzB;AACA,UAAM;AAAEA,MAAAA,EAAE,EAAEO;AAAN,QAAgBpB,KAAK,CAACY,MAA5B;;AACA,QAAIQ,KAAJ,EAAW;AACPX,MAAAA,SAAS;AACZ;AACJ,GANQ,EAMN,EANM,CAAT;AAOA,sBACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI,QAAC,SAAD;AAAA,gBACKF,MAAM,CAACc,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,kBACR,QAAC,aAAD;AAA2B,QAAA,IAAI,EAAED;AAAjC,SAAoBC,KAApB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AASH,CAhCD;;GAAMxB,M;;MAAAA,M;AAkCN,eAAeA,MAAf","sourcesContent":["import {useEffect, useState} from \"react\";\nimport instance from '../components/instance';\nimport styled from 'styled-components';\n\nimport MovieListItem from '../components/movieListItem';\n\nconst MovieList = styled.ul`\n    display: flex;\n`;\n\nconst Genres = ({match}) => {\n\n    const [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [totalResults, setTotalResults] = useState(0);\n    const [movies, setMovies] = useState([]);\n\n    const fetchData = async () => {\n        const result = await instance.get(`discover/movie?with_genres=${match.params.id}&page=${page}`);\n        console.log(result.data.results);\n        setMovies(result.data.results);\n        setPage(result.data.page);\n        setTotalPages(result.data.total_pages);\n        setTotalResults(result.data.total_results);\n    };\n\n    useEffect(() => {\n        console.log(match.params.id);\n        const { id: idNum } = match.params;\n        if (idNum) {\n            fetchData();\n        }\n    }, []);\n    return (\n    <div className=\"constainer\">\n        <MovieList>\n            {movies.map((item, index)=>(\n                <MovieListItem key={index} item={item} />\n            ))}\n        </MovieList>\n    </div>\n    );\n}\n\nexport default Genres;"]},"metadata":{},"sourceType":"module"}